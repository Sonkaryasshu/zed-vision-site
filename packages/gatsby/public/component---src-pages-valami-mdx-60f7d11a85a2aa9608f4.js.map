{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/pages/valami.mdx"],"names":["StyledContent","styled","div","Layout","location","title","children","header","to","pathname","__PATH_PREFIX__","name","content","Date","getFullYear","_frontmatter","MDXLayout","PageLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"8FAAA,wCAUMA,EAVN,UAUsBC,EAAOC,IAAV,4EAAGD,CAAH,mCA6CJE,IAxCiB,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAI9CC,EACF,0BACE,gBAAC,OAAD,CAAMC,GAAE,KAAQH,IAiBpB,OAZEE,EAFIH,GAAYA,EAASK,SAClBL,EAASK,gBATdC,EAEU,IASV,0BACE,gBAAC,OAAD,CAAMF,GAAE,KAAQH,IAKlB,0BACE,gBAAC,OAAD,CAAMG,GAAE,KAAQH,IAVyB,gBAAC,WAAD,MAe7C,gCACE,gBAAC,IAAD,KACE,wBACEM,KAAK,WACLC,QAAQ,gFAGZ,gBAACZ,EAAD,KACE,8BAASO,GACT,4BAAOD,GACP,oCAAW,IAAIO,MAAOC,cAAtB,oB,kLC3CKC,EAAe,GAOtBC,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeI,EAAf,CAAsBD,WAAYA,EAAYE,QAAQ,cAC3D,sCACA,0CACA,8BACA,8BACA,8BACA,yBAAK,qBAAU,CACX,UAAa,sBACb,WAAc,YACd,KAAQ,OACR,WAAc,OAJb,yRAiBL,uBAAG,mBAAQ,CACP,WAAc,KADf,6BAGH,oDACE,2BAAgB,CACd,WAAc,KADhB,UADF,0BAKA,uDACA,uBAAG,uBAAY,CACX,WAAc,KADf,2BAGH,mBAAQ,CACN,UAAa,sBAGb,mBAAQ,CACN,UAAa,iBACb,WAAc,MACb,sBAAW,CACV,KAAQ,WACR,SAAW,EACX,UAAY,EACZ,WAAc,OAPlB,yBAWE,kBAAO,CACL,KAAQ,GACR,WAAc,MAFhB,SAXF,KAgBE,uBAAY,CACV,WAAc,MADhB,cAhBF,SAoBE,iCApBF,cAwBA,mBAAQ,CACN,UAAa,iBACb,WAAc,MACb,sBAAW,CACV,KAAQ,WACR,SAAW,EACX,UAAY,EACZ,WAAc,OAPlB,sEAaA,mBAAQ,CACN,UAAa,iBACb,WAAc,MACb,sBAAW,CACV,KAAQ,WACR,SAAW,EACX,UAAY,EACZ,WAAc,OAPlB,+BAaA,mBAAQ,CACN,UAAa,iBACb,WAAc,MACb,sBAAW,CACV,KAAQ,WACR,SAAW,EACX,UAAY,EACZ,WAAc,OAPlB,mCAaF,yBAAK,qBAAU,CACX,UAAa,eACb,WAAc,OAFb,mFASL,8CACA,gCAEE,kBAAO,CACL,WAAc,cADhB,yDAMF,uBAAG,mBAAQ,CACP,WAAc,KADf,OAGC,uBAAY,CACV,WAAc,MADhB,OAHD,kBAOH,8BACA,8BACE,2BAAgB,CACd,WAAc,MADhB,SAGF,+BACA,yBAAK,qBAAU,CACX,UAAa,sBACb,WAAc,OAFb,8FAeTH,EAAWI,gBAAiB","file":"component---src-pages-valami-mdx-60f7d11a85a2aa9608f4.js","sourcesContent":["import * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  location: Location;\n  title: string;\n}\n\nconst StyledContent = styled.div`\nmax-width: 1140px;\nmargin: auto;\n`;\n\nconst Layout: React.FC<Props> = ({ location, title, children }) => {\n  let __PATH_PREFIX__;\n\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header = (\n    <h1>\n      <Link to={`/`}>{title}</Link>\n    </h1>\n  );\n  if (!(location && location.pathname)) header = <React.Fragment />;\n  else if (location.pathname === rootPath) {\n    header = (\n      <h1>\n        <Link to={`/`}>{title}</Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h2>\n        <Link to={`/`}>{title}</Link>\n      </h2>\n    );\n  }\n  return (\n    <>\n      <Helmet>\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n        />\n      </Helmet>\n      <StyledContent>\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>Â© {new Date().getFullYear()}, Zed vision</footer>\n      </StyledContent>\n    </>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport PageLayout from \"../components/layout.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst MDXLayout = PageLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`h1 Heading`}</h1>\n    <h2>{`h2 Heading two`}</h2>\n    <h3>{`h3`}</h3>\n    <h4>{`h4`}</h4>\n    <h5>{`h5`}</h5>\n    <pre><code {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\",\n        \"parentName\": \"pre\"\n      }}>{`() => {\n    const [state, setState] = React.useState({counter: 0})\n    \n    const actions = {\n    increase: ()=>setState({...state, counter: state.counter + 1}),\n    }\n    \n    return <h3 onClick={actions.increase}>\n        Counter: {state.counter}\n        </h3>\n}\n`}</code></pre>\n    <p><em {...{\n        \"parentName\": \"p\"\n      }}>{`This text will be italic`}</em></p>\n    <p>{`I think you should use an `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`<addr>`}</inlineCode>\n      {` element here instead.`}</p>\n    <p>{`You can do anything here!!!!`}</p>\n    <p><strong {...{\n        \"parentName\": \"p\"\n      }}>{`This text will be bold`}</strong></p>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n\n      <li {...{\n        \"className\": \"task-list-item\",\n        \"parentName\": \"ul\"\n      }}><input {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true,\n          \"parentName\": \"li\"\n        }} />\n        {` `}\n        {`@mentions, #refs, `}\n        <a {...{\n          \"href\": \"\",\n          \"parentName\": \"li\"\n        }}>{`links`}</a>\n        {`, `}\n        <strong {...{\n          \"parentName\": \"li\"\n        }}>{`formatting`}</strong>\n        {`, and `}\n        <del>{`tags`}</del>\n        {` supported`}</li>\n\n\n      <li {...{\n        \"className\": \"task-list-item\",\n        \"parentName\": \"ul\"\n      }}><input {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true,\n          \"parentName\": \"li\"\n        }} />\n        {` `}\n        {`list syntax required (any unordered or ordered list supported)`}</li>\n\n\n      <li {...{\n        \"className\": \"task-list-item\",\n        \"parentName\": \"ul\"\n      }}><input {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true,\n          \"parentName\": \"li\"\n        }} />\n        {` `}\n        {`this is a complete item`}</li>\n\n\n      <li {...{\n        \"className\": \"task-list-item\",\n        \"parentName\": \"ul\"\n      }}><input {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true,\n          \"parentName\": \"li\"\n        }} />\n        {` `}\n        {`this is an incomplete item`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-tsx\",\n        \"parentName\": \"pre\"\n      }}>{`function fancyAlert(arg) {\n  if(arg) {\n    $.facebox({div:'#foo'})\n  }\n}\n`}</code></pre>\n    <p>{`As Kanye West said:`}</p>\n    <blockquote>\n\n      <p {...{\n        \"parentName\": \"blockquote\"\n      }}>{`We're living the future so\nthe present is our past.`}</p>\n\n    </blockquote>\n    <p><em {...{\n        \"parentName\": \"p\"\n      }}>{`You `}\n        <strong {...{\n          \"parentName\": \"em\"\n        }}>{`can`}</strong>\n        {` combine them`}</em></p>\n    <h1>{`h1`}</h1>\n    <h2>{`h2 `}\n      <inlineCode {...{\n        \"parentName\": \"h2\"\n      }}>{`code`}</inlineCode></h2>\n    <p>{`text`}</p>\n    <pre><code {...{\n        \"className\": \"language-javascript\",\n        \"parentName\": \"pre\"\n      }}>{`  let i=100;\n\n  while (i--<100) {\n      console.log(i);\n  }\n  \n  console.log(i);\n`}</code></pre>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}