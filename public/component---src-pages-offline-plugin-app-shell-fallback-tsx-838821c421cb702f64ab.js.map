{"version":3,"sources":["webpack:///./src/components/seo.tsx","webpack:///./src/pages/offline-plugin-app-shell-fallback.tsx"],"names":["SEO","description","lang","meta","title","useStaticQuery","site","metaDescription","siteMetadata","name","content","property","social","twitter","concat","defaultProps","NotFoundPage","data","location","siteTitle","pageQuery"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAOA;AAEA;AACA;;AAYA,IAAMA,GAAG,GAAG,SAANA,GAAM,OAA+C;AAAA,MAA5CC,WAA4C,QAA5CA,WAA4C;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;;AAAA,wBACxCC,6DAAc,cAD0B;AAAA,MACjDC,IADiD,mBACjDA,IADiD;;AAiBzD,MAAMC,eAAe,GAAGN,WAAW,IAAIK,IAAI,CAACE,YAAL,CAAkBP,WAAzD;AAEA,sBACE,oDAAC,2DAAD;AACE,kBAAc,EAAE;AACdC,UAAI,EAAJA;AADc,KADlB;AAIE,SAAK,EAAEE,KAJT;AAKE,iBAAa,YAAUE,IAAI,CAACE,YAAL,CAAkBJ,KAL3C;AAME,QAAI,EAAE,CACJ;AACEK,UAAI,eADN;AAEEC,aAAO,EAAEH;AAFX,KADI,EAKJ;AACEI,cAAQ,YADV;AAEED,aAAO,EAAEN;AAFX,KALI,EASJ;AACEO,cAAQ,kBADV;AAEED,aAAO,EAAEH;AAFX,KATI,EAaJ;AACEI,cAAQ,WADV;AAEED,aAAO;AAFT,KAbI,EAiBJ;AACED,UAAI,gBADN;AAEEC,aAAO;AAFT,KAjBI,EAqBJ;AACED,UAAI,mBADN;AAEEC,aAAO,EAAEJ,IAAI,CAACE,YAAL,CAAkBI,MAAlB,CAAyBC;AAFpC,KArBI,EAyBJ;AACEJ,UAAI,iBADN;AAEEC,aAAO,EAAEN;AAFX,KAzBI,EA6BJ;AACEK,UAAI,uBADN;AAEEC,aAAO,EAAEH;AAFX,KA7BI,EAiCJO,MAjCI,CAiCGX,IAjCH;AANR,IADF;AA2CD,CA9DD;;AAgEAH,GAAG,CAACe,YAAJ,GAAmB;AACjBb,MAAI,MADa;AAEjBC,MAAI,EAAE,EAFW;AAGjBF,aAAW;AAHM,CAAnB;AAaeD,4DAAf,E;;;;;;;;ACnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AAaA,IAAMgB,YAAY,GAAG,SAAfA,YAAe,OAA+B;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAClD,MAAMC,SAAS,GAAGF,IAAI,CAACX,IAAL,CAAUE,YAAV,CAAuBJ,KAAzC;AAEA,sBACE,oDAAC,kEAAD;AAAQ,YAAQ,EAAEc,QAAlB;AAA4B,SAAK,EAAEC;AAAnC,kBACE,oDAAC,+DAAD;AAAK,SAAK,EAAC;AAAX,IADF,eAEE,wFAFF,eAGE,gGAHF,CADF;AAOD,CAVD;;AAYeH,2EAAf;AAEO,IAAMI,SAAS,eAAf,C","file":"component---src-pages-offline-plugin-app-shell-fallback-tsx-838821c421cb702f64ab.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface Props {\n  description: string\n  lang: string\n  meta: {\n    name: string\n    content: string\n  }[]\n  title: string\n}\n\nconst SEO = ({ description, lang, meta, title }: Props) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n  }\n  location: Location\n}\n\nconst NotFoundPage = ({ data, location }: Props) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"... offline\" />\n      <h1>Maybe you are offline</h1>\n      <p>Check your internet connection</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}