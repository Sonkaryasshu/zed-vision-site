{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/codeBox/styledCodeBoxComps.ts","webpack:///./src/components/codeBox/CodeBox.tsx","webpack:///./src/pages/codebox.tsx"],"names":["StyledContent","styled","main","Layout","children","SEO","description","lang","meta","title","useStaticQuery","site","metaDescription","siteMetadata","name","content","property","social","twitter","concat","Container","div","CodeBox","Page"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA,IAAMA,aAAa,GAAGC,iEAAM,CAACC,IAAV;AAAA;AAAA;AAAA,qCAAnB;AAKO,IAAMC,MAAgB,GAAG,SAAnBA,MAAmB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,sBACE,+DAAC,4CAAD,CAAO,QAAP;AAAA,4BACE,8DAAC,2DAAD;AAAA,6BACE;AACE,YAAI,EAAC,UADP;AAEE,eAAO,EAAC;AAFV;AADF,MADF,eAOE,8DAAC,aAAD;AAAA,gBACGA;AADH,MAPF;AAAA,IADF;AAaD,CAdM,C;;;;;;;;;;;;;;;;ACTP;AACA;AACA;AACA;;;;;;;AAiBO,IAAMC,GAAoB,GAAG,SAAvBA,GAAuB,OAE/B;AAAA,8BADDC,WACC;AAAA,MADDA,WACC,iCADa,EACb;AAAA,uBADiBC,IACjB;AAAA,MADiBA,IACjB,0BADwB,IACxB;AAAA,uBAD8BC,IAC9B;AAAA,MAD8BA,IAC9B,0BADqC,EACrC;AAAA,MADyCC,KACzC,QADyCA,KACzC;;AAAA,wBACcC,6DAAc,cAD5B;AAAA,MACKC,IADL,mBACKA,IADL;;AAiBH,MAAMC,eAAe,GAAGN,WAAW,IAAIK,IAAI,CAACE,YAAL,CAAkBP,WAAzD;AAEA,sBACE,8DAAC,2DAAD;AACE,kBAAc,EAAE;AACdC,UAAI,EAAJA;AADc,KADlB;AAIE,SAAK,EAAEE,KAJT;AAKE,iBAAa,YAAUE,IAAI,CAACE,YAAL,CAAkBJ,KAL3C;AAME,QAAI,EAAE,CACJ;AACEK,UAAI,eADN;AAEEC,aAAO,EAAEH;AAFX,KADI,EAKJ;AACEI,cAAQ,YADV;AAEED,aAAO,EAAEN;AAFX,KALI,EASJ;AACEO,cAAQ,kBADV;AAEED,aAAO,EAAEH;AAFX,KATI,EAaJ;AACEI,cAAQ,WADV;AAEED,aAAO;AAFT,KAbI,EAiBJ;AACED,UAAI,gBADN;AAEEC,aAAO;AAFT,KAjBI,EAqBJ;AACED,UAAI,mBADN;AAEEC,aAAO,EAAEJ,IAAI,CAACE,YAAL,CAAkBI,MAAlB,CAAyBC;AAFpC,KArBI,EAyBJ;AACEJ,UAAI,iBADN;AAEEC,aAAO,EAAEN;AAFX,KAzBI,EA6BJ;AACEK,UAAI,uBADN;AAEEC,aAAO,EAAEH;AAFX,KA7BI,EAiCJO,MAjCI,CAiCGX,IAjCH;AANR,IADF;AA2CD,CAhEM,C;;;;;;;;;;;;;;;;;;;;;;;;ACpBP;AAEO,IAAMY,SAAS,GAAGnB,gDAAM,CAACoB,GAAV;AAAA;AAAA;AAAA,8CAAf,C;;;ACFP;AAEA;AAEO,IAAMC,eAAO,GAAG,SAAVA,OAAU;AAAA,sBACrB,2BAAC,SAAD;AAAA,2BACE;AAAA;AAAA;AADF,IADqB;AAAA,CAAhB,C;;;;;;;;;;ACJP;AAEA;AACA;AACA;AAEe,SAASC,IAAT,GAAgB;AAC7B,sBAAO,4BAAC,wBAAD;AAAA,4BACL,2BAAC,kBAAD;AAAK,WAAK,EAAC;AAAX,MADK,eAEL;AAAA;AAAA,MAFK,eAGL;AAAA;AAAA,MAHK,eAIL,2BAAC,eAAD,KAJK;AAAA,IAAP;AAMD,C","file":"component---src-pages-codebox-tsx-0115330269f7da2d548d.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\n\nconst StyledContent = styled.main`\nmax-width: 1140px;\nmargin: auto;\n`;\n\nexport const Layout: React.FC = ({ children }) => {\n  return (\n    <React.Fragment>\n      <Helmet>\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n        />\n      </Helmet>\n      <StyledContent>\n        {children}\n      </StyledContent>\n    </React.Fragment>\n  );\n};\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\ninterface Props {\n  description?: string;\n  lang?: string;\n  meta?: {\n    name: string;\n    content: string;\n  }[];\n  title: string;\n}\n\nexport const SEO: React.FC<Props> = (\n  { description = \"\", lang = \"en\", meta = [], title },\n) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\ndisplay: block;\nwidth: 100%;\nheight: 400px;\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styledCodeBoxComps\";\n\nexport const CodeBox = () =>\n  <Container>\n    <h1>Ello</h1>\n  </Container>;\n","import * as React from \"react\";\n\nimport { CodeBox } from \"../components/codeBox/CodeBox\";\nimport { Layout } from \"../components/layout\";\nimport { SEO } from \"../components/seo\";\n\nexport default function Page() {\n  return <Layout>\n    <SEO title=\"Code Box\" />\n    <h1>Code box</h1>\n    <p>Lets see!</p>\n    <CodeBox />\n  </Layout>;\n}\n"],"sourceRoot":""}