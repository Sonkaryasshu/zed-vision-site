{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["StyledLink","styled","Link","H3","h3","rhythm","BlogIndex","data","location","siteTitle","site","siteMetadata","title","edges","allMdx","map","node","frontmatter","fields","slug","date","__html","description","excerpt","pageQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,IAAMA,UAAU,GAAGC,yEAAM,CAACC,2CAAD,CAAT,mBAAhB;AAIA,IAAMC,EAAE,GAAGF,iEAAM,CAACG,EAAV,qBACWC,wEAAM,CAAC,IAAI,CAAL,CADjB,CAAR;;AA8BA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACzD,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUC,YAAV,CAAuBC,KAAzC;AACA,MAAMC,KAAK,GAAGN,IAAI,CAACO,MAAL,CAAYD,KAA1B;AAEA,sBACE,oDAAC,kEAAD;AAAQ,YAAQ,EAAEL,QAAlB;AAA4B,SAAK,EAAEC;AAAnC,kBACE,oDAAC,+DAAD;AAAK,SAAK,EAAC;AAAX,IADF,eAEE,oDAAC,+DAAD,OAFF,EAGGI,KAAK,CAACE,GAAN,CAAU,iBAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AACvB,QAAMJ,KAAK,GAAGI,IAAI,CAACC,WAAL,CAAiBL,KAAjB,IAA0BI,IAAI,CAACE,MAAL,CAAYC,IAApD;AACA,wBACE;AAAS,SAAG,EAAEH,IAAI,CAACE,MAAL,CAAYC;AAA1B,oBACE,iFACE,oDAAC,EAAD,qBACE,oDAAC,UAAD;AAAY,QAAE,EAAEH,IAAI,CAACE,MAAL,CAAYC;AAA5B,OAAmCP,KAAnC,CADF,CADF,eAIE,mEAAQI,IAAI,CAACC,WAAL,CAAiBG,IAAzB,CAJF,CADF,eAOE,kFACE;AACE,6BAAuB,EAAE;AACvBC,cAAM,EAAEL,IAAI,CAACC,WAAL,CAAiBK,WAAjB,IAAgCN,IAAI,CAACO;AADtB;AAD3B,MADF,CAPF,CADF;AAiBD,GAnBA,CAHH,CADF;AA0BD,CA9BD;;AAgCejB,wEAAf;AAEO,IAAMkB,SAAS,cAAf,C","file":"component---src-pages-index-tsx-df89a812158ede6bc55a.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport styled from \"styled-components\"\n\nconst StyledLink = styled(Link)`\n  box-shadow: \"none\";\n`\n\nconst H3 = styled.h3`\n  margin-bottom: ${rhythm(1 / 4)};\n`\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n    allMdx: {\n      edges: {\n        node: {\n          excerpt: string\n          frontmatter: {\n            title: string\n            date: string\n            description: string\n          }\n          fields: {\n            slug: string\n          }\n        }\n      }[]\n    }\n  }\n  location: Location\n}\n\nconst BlogIndex: React.FC<Props> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const edges = data.allMdx.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"This is Zed vision\" />\n      <Bio />\n      {edges.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <H3>\n                <StyledLink to={node.fields.slug}>{title}</StyledLink>\n              </H3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}