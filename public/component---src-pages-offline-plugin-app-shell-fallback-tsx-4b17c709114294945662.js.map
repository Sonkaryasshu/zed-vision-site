{"version":3,"sources":["webpack:///./src/components/seo.tsx","webpack:///./src/pages/offline-plugin-app-shell-fallback.tsx"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","NotFoundPage","data","location","siteTitle","pageQuery"],"mappings":"2FAAA,wCAqBMA,EAAM,SAAC,GAA8C,IAA5CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAC9BC,EAASC,yBAAe,cAAxBD,KAgBFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE,gBAAC,IAAD,CACEQ,eAAgB,CACdP,QAEFE,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEQ,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASR,GAEX,CACES,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASP,EAAKG,aAAaM,OAAOC,SAEpC,CACEJ,KAAM,gBACNC,QAASR,GAEX,CACEO,KAAM,sBACNC,QAASL,IAEXS,OAAOb,MAKfH,EAAIiB,aAAe,CACjBf,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD,O,oCClGf,yFA6BekB,UAZM,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SACtBC,EAAYF,EAAKd,KAAKG,aAAaJ,MAEzC,OACE,gBAAC,IAAD,CAAQgB,SAAUA,EAAUhB,MAAOiB,GACjC,gBAAC,IAAD,CAAKjB,MAAM,gBACX,mDACA,6DAOC,IAAMkB,EAAY","file":"component---src-pages-offline-plugin-app-shell-fallback-tsx-4b17c709114294945662.js","sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\n/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\ninterface Props {\n  description: string\n  lang: string\n  meta: {\n    name: string\n    content: string\n  }[]\n  title: string\n}\n\nconst SEO = ({ description, lang, meta, title }: Props) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n  }\n  location: Location\n}\n\nconst NotFoundPage = ({ data, location }: Props) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"... offline\" />\n      <h1>Maybe you are offline</h1>\n      <p>Check your internet connection</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}