{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/layout.tsx"],"names":["UsingTypescript","path","location","query","StyledContent","styled","div","Layout","title","children","__PATH_PREFIX__","rootPath","header","pathname","Date","getFullYear"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;CAEA;;AAEA,IAAMA,eAAoC,GAAG,SAAvCA,eAAuC;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,QAAT,QAASA,QAAT;AAAA,sBAC3C,oDAAC,iEAAD;AAAQ,SAAK,EAAC,kBAAd;AAAiC,YAAQ,EAAEA;AAA3C,kBACE,oDAAC,2DAAD;AAAK,SAAK,EAAC;AAAX,IADF,eAEE,yGAFF,eAGE,yHAC2C,2EAD3C,8EAE6D,8EAF7D,0EAHF,eASE,2HAC6C,6EAD7C,mCAEkB,6EAFlB,gCAEkD,4EAFlD,WATF,eAaE,iGAAkCD,IAAlC,SAbF,eAcE,oDAAC,2CAAD;AAAM,MAAE,EAAC;AAAT,+BAdF,CAD2C;AAAA,CAA7C;;AAmBeD,8EAAf;AAEO,IAAMG,KAAK,GAAG,IAAd,C;;;;;;;;AC3BP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAOA,IAAMC,aAAa,GAAGC,iEAAM,CAACC,GAAV;AAAA;AAAA;AAAA,qCAAnB;AAKO,IAAMC,MAAuB,GAAG,SAA1BA,MAA0B,OAAmC;AAAA,MAAhCL,QAAgC,QAAhCA,QAAgC;AAAA,MAAtBM,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACxE,MAAIC,eAAJ;;AAEA,MAAMC,QAAQ,GAAMD,eAAN,MAAd;AACA,MAAIE,MAAM,gBACR,6EACE,oDAAC,2CAAD;AAAM,MAAE;AAAR,KAAgBJ,KAAhB,CADF,CADF;AAKA,MAAI,EAAEN,QAAQ,IAAIA,QAAQ,CAACW,QAAvB,CAAJ,EAAsCD,MAAM,gBAAG,oDAAC,8CAAD,OAAT,CAAtC,KACK,IAAIV,QAAQ,CAACW,QAAT,KAAsBF,QAA1B,EAAoC;AACvCC,UAAM,gBACJ,6EACE,oDAAC,2CAAD;AAAM,QAAE;AAAR,OAAgBJ,KAAhB,CADF,CADF;AAKD,GANI,MAME;AACLI,UAAM,gBACJ,6EACE,oDAAC,2CAAD;AAAM,QAAE;AAAR,OAAgBJ,KAAhB,CADF,CADF;AAKD;AACD,sBACE,oDAAC,8CAAD,qBACE,oDAAC,2DAAD,qBACE;AACE,QAAI,EAAC,UADP;AAEE,WAAO,EAAC;AAFV,IADF,CADF,eAOE,oDAAC,aAAD,qBACE,oEAASI,MAAT,CADF,eAEE,kEAAOH,QAAP,CAFF,eAGE,6EAAW,IAAIK,IAAJ,GAAWC,WAAX,EAAX,iBAHF,CAPF,CADF;AAeD,CAtCM,C","file":"component---src-pages-using-typescript-tsx-f27e9bbc96be177b0b90.js","sourcesContent":["import * as React from \"react\";\nimport { Layout } from \"../components/layout\";\nimport { SEO } from \"../components/seo\";\nimport { Link, PageProps } from \"gatsby\";\n// If you don't want to use TypeScript you can delete this file!\n\nconst UsingTypescript: React.FC<PageProps> = ({ path, location }) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em>\n      files for your pages, components etc. Please note that the <em>\n        gatsby-*.js\n      </em> files (like gatsby-node.js) currently do not support TypeScript yet.\n    </p>\n    <p>\n      For type checking you will want to install <em>typescript</em>\n      via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>You are currently on the page {path}\\\\</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport default UsingTypescript;\n\nexport const query = null;\n","import * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  location: Location;\n  title: string;\n}\n\nconst StyledContent = styled.div`\nmax-width: 1140px;\nmargin: auto;\n`;\n\nexport const Layout: React.FC<Props> = ({ location, title, children }) => {\n  let __PATH_PREFIX__;\n\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header = (\n    <h1>\n      <Link to={`/`}>{title}</Link>\n    </h1>\n  );\n  if (!(location && location.pathname)) header = <React.Fragment />;\n  else if (location.pathname === rootPath) {\n    header = (\n      <h1>\n        <Link to={`/`}>{title}</Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h2>\n        <Link to={`/`}>{title}</Link>\n      </h2>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Helmet>\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n        />\n      </Helmet>\n      <StyledContent>\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>Â© {new Date().getFullYear()}, Zed vision</footer>\n      </StyledContent>\n    </React.Fragment>\n  );\n};\n"],"sourceRoot":""}