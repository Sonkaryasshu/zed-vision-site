{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/layout.tsx"],"names":["NotFoundPage","data","location","siteTitle","site","siteMetadata","title","pageQuery","StyledContent","styled","div","Layout","children","__PATH_PREFIX__","rootPath","header","pathname","Date","getFullYear"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AAaA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAA+B;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAClD,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUC,YAAV,CAAuBC,KAAzC;AAEA,sBACE,oDAAC,iEAAD;AAAQ,YAAQ,EAAEJ,QAAlB;AAA4B,SAAK,EAAEC;AAAnC,kBACE,oDAAC,2DAAD;AAAK,SAAK,EAAC;AAAX,IADF,eAEE,4EAFF,eAGE,qHAHF,CADF;AAOD,CAVD;;AAYeH,2EAAf;AAEO,IAAMO,SAAS,eAAf,C;;;;;;;;AC/BP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAOA,IAAMC,aAAa,GAAGC,iEAAM,CAACC,GAAV;AAAA;AAAA;AAAA,qCAAnB;AAKO,IAAMC,MAAuB,GAAG,SAA1BA,MAA0B,OAAmC;AAAA,MAAhCT,QAAgC,QAAhCA,QAAgC;AAAA,MAAtBI,KAAsB,QAAtBA,KAAsB;AAAA,MAAfM,QAAe,QAAfA,QAAe;;AACxE,MAAIC,eAAJ;;AAEA,MAAMC,QAAQ,GAAMD,eAAN,MAAd;AACA,MAAIE,MAAM,gBACR,6EACE,oDAAC,2CAAD;AAAM,MAAE;AAAR,KAAgBT,KAAhB,CADF,CADF;AAKA,MAAI,EAAEJ,QAAQ,IAAIA,QAAQ,CAACc,QAAvB,CAAJ,EAAsCD,MAAM,gBAAG,oDAAC,8CAAD,OAAT,CAAtC,KACK,IAAIb,QAAQ,CAACc,QAAT,KAAsBF,QAA1B,EAAoC;AACvCC,UAAM,gBACJ,6EACE,oDAAC,2CAAD;AAAM,QAAE;AAAR,OAAgBT,KAAhB,CADF,CADF;AAKD,GANI,MAME;AACLS,UAAM,gBACJ,6EACE,oDAAC,2CAAD;AAAM,QAAE;AAAR,OAAgBT,KAAhB,CADF,CADF;AAKD;AACD,sBACE,oDAAC,8CAAD,qBACE,oDAAC,2DAAD,qBACE;AACE,QAAI,EAAC,UADP;AAEE,WAAO,EAAC;AAFV,IADF,CADF,eAOE,oDAAC,aAAD,qBACE,oEAASS,MAAT,CADF,eAEE,kEAAOH,QAAP,CAFF,eAGE,6EAAW,IAAIK,IAAJ,GAAWC,WAAX,EAAX,iBAHF,CAPF,CADF;AAeD,CAtCM,C","file":"component---src-pages-404-tsx-8fa43c9630ca5a90c10c.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/layout\";\nimport { SEO } from \"../components/seo\";\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n  location: Location;\n}\n\nconst NotFoundPage = ({ data, location }: Props) => {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that not exist... the sadness.</p>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  location: Location;\n  title: string;\n}\n\nconst StyledContent = styled.div`\nmax-width: 1140px;\nmargin: auto;\n`;\n\nexport const Layout: React.FC<Props> = ({ location, title, children }) => {\n  let __PATH_PREFIX__;\n\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header = (\n    <h1>\n      <Link to={`/`}>{title}</Link>\n    </h1>\n  );\n  if (!(location && location.pathname)) header = <React.Fragment />;\n  else if (location.pathname === rootPath) {\n    header = (\n      <h1>\n        <Link to={`/`}>{title}</Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h2>\n        <Link to={`/`}>{title}</Link>\n      </h2>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Helmet>\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n        />\n      </Helmet>\n      <StyledContent>\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>Â© {new Date().getFullYear()}, Zed vision</footer>\n      </StyledContent>\n    </React.Fragment>\n  );\n};\n"],"sourceRoot":""}