{"version":3,"sources":["webpack:///./node_modules/react-cdn-monaco-editor/lib/editor.js","webpack:///./src/components/monacoEditor.tsx"],"names":["MonacoEditorComp","value","changeCode","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA6F;AACxD;AACuE;AAClF;AACnB,IAAI,mBAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,EAAE,eAAK;AACP;;AAEA;AACA,kBAAkB,2CAAiB,eAAe,qBAAmB;AACrE;AACA,eAAe,qBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH,SAAS,eAAK;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,4GAA4G,4CAA4C,MAAM,qGAAqG,uHAAuH,sBAAsB,SAAS,eAAe,EAAE,EAAE,0DAA0D,mFAAmF,6GAA6G,EAAE,gGAAgG,EAAE,GAAG,wBAAwB,4CAA4C,6BAA6B,mDAAmD,YAAY,2CAA2C,kBAAkB,yBAAyB,yBAAyB,mCAAmC,KAAK,EAAE,GAAG;AACzkC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,E;;;;;AC/EA;AAEA;;AAEA,IAAMA,6BAEL,GAAG,SAFEA,gBAEF;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,UAAV,QAAUA,UAAV;AAAA,sBACF,2BAAC,mBAAD;AACE,SAAK,EAAC,MADR;AAEE,UAAM,EAAC,OAFT;AAGE,YAAQ,EAAC,YAHX;AAIE,SAAK,EAAED,KAJT;AAKE,YAAQ,EAAE,kBAACE,CAAD;AAAA,aAAOD,UAAU,CAACC,CAAD,CAAjB;AAAA;AALZ,IADE;AAAA,CAFJ;;AAWeH,+GAAf,E","file":"23-e4fb849170fc101e8ae4.js","sourcesContent":["import _regeneratorRuntime from \"/z/zed-vision-site/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/z/zed-vision-site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nexport var MonacoEditor = function MonacoEditor(_ref) {\n  var _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"600px\" : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? \"400px\" : _ref$height,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? \"\" : _ref$value,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? \"typescript\" : _ref$language,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function (_code) {} : _ref$onChange;\n  React.useEffect(function () {\n    if (typeof window === \"undefined\") return;\n\n    var init = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var monaco;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return startMonaco({\n                  element: \"container\",\n                  value: value,\n                  language: language,\n                  onChange: onChange\n                });\n\n              case 2:\n                monaco = _context.sent;\n                console.log(monaco);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function init() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    init();\n  });\n  return React.createElement(\"div\", {\n    id: \"container\",\n    style: {\n      width: width,\n      height: height\n    }\n  });\n};\n\nvar startMonaco = function startMonaco(_ref3) {\n  var _ref3$version = _ref3.version,\n      version = _ref3$version === void 0 ? \"0.21.2\" : _ref3$version,\n      _ref3$element = _ref3.element,\n      element = _ref3$element === void 0 ? \"container\" : _ref3$element,\n      _ref3$value = _ref3.value,\n      value = _ref3$value === void 0 ? \"\" : _ref3$value,\n      _ref3$language = _ref3.language,\n      language = _ref3$language === void 0 ? \"typescript\" : _ref3$language,\n      _ref3$onChange = _ref3.onChange,\n      onChange = _ref3$onChange === void 0 ? function (_code) {} : _ref3$onChange;\n  return new Function(\"version\", \"element\", \"value\", \"language\", \"onChange\", \"\\nconst startMonaco = async ({version, element, value, language, onChange}) => {\\n  const vsPath = 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/\".concat(version, \"/min/vs';\\n  await loadScript('https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/\").concat(version, \"/min/vs/loader.min.js');\\n\\n  require.config({ paths: { 'vs': vsPath } });\\n  \\n  require([\\\"vs/editor/editor.main\\\"], function () {\\n    const editor = monaco.editor.create(document.getElementById(\\\"container\\\"), {\\n      value: `\").concat(value, \"`,\\n      language: `\").concat(language, \"`,\\n      theme: 'vs-dark'\\n    });\\n\\n    editor.onDidChangeModelContent((event)=>(\").concat(onChange, \")(editor.getValue()))\\n  });\\n}\\n\\nreturn startMonaco({version, element, value, language, onChange})\\nfunction loadScript(src) {\\n  return new Promise(function (resolve, reject) {\\n    var s;\\n    s = document.createElement('script');\\n    s.src = src;\\n    s.onload = resolve;\\n    s.onerror = reject;\\n    document.head.appendChild(s);\\n  });\\n}\\n\"))({\n    version: version,\n    element: element,\n    value: value,\n    language: language,\n    onChange: onChange\n  });\n};","import React from \"react\";\n\nimport {MonacoEditor} from \"react-cdn-monaco-editor\";\n\nconst MonacoEditorComp: React.FC<\n  { value: string; changeCode: (code: string) => void }\n> = ({ value, changeCode }) =>\n  <MonacoEditor\n    width=\"100%\"\n    height=\"100vh\"\n    language=\"typescript\"\n    value={value}\n    onChange={(e) => changeCode(e)}\n  />;\n\nexport default MonacoEditorComp;\n"],"sourceRoot":""}