{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/seo.tsx"],"names":["StyledLink","styled","Link","H3","h3","rhythm","BlogIndex","data","edges","allMdx","map","node","title","frontmatter","fields","slug","date","__html","description","excerpt","pageQuery","SEO","lang","meta","useStaticQuery","site","metaDescription","siteMetadata","name","content","property","social","twitter","concat"],"mappings":"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","file":"component---src-pages-index-tsx-8c332830b02df858fd6f.js","sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport { Bio } from \"../components/bio\";\nimport { Layout } from \"../components/layout\";\nimport { SEO } from \"../components/seo\";\nimport { rhythm } from \"../components/utils/typography\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  box-shadow: \"none\";\n`;\n\nconst H3 = styled.h3`\n  margin-bottom: ${rhythm(1 / 4)};\n`;\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n    allMdx: {\n      edges: {\n        node: {\n          excerpt: string;\n          frontmatter: {\n            title: string;\n            date: string;\n            description: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }[];\n    };\n  };\n  location: Location;\n}\n\nconst BlogIndex: React.FC<Props> = ({ data }) => {\n  const edges = data.allMdx.edges;\n\n  return (\n    <Layout>\n      <SEO title=\"This is Zed vision\" />\n      <Bio />\n      {edges.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <H3>\n                <StyledLink to={node.fields.slug}>{title}</StyledLink>\n              </H3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\ninterface Props {\n  description?: string;\n  lang?: string;\n  meta?: {\n    name: string;\n    content: string;\n  }[];\n  title: string;\n}\n\nexport const SEO: React.FC<Props> = (\n  { description = \"\", lang = \"en\", meta = [], title },\n) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n"],"sourceRoot":""}